{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Scoreboard/index.js","App.js","index.js"],"names":["FriendCard","props","className","friends","map","friend","id","onClick","clicked","src","image","Wrapper","children","Title","Scoreboard","points","highscore","App","state","clickedCharIds","addPoints","console","log","setState","push","losePoints","shuffle","newArr","usedIndex","i","length","rand","Math","floor","random","indexOf","operation","target","this","clickedCharPoints","Component","ReactDOM","render","document","getElementById"],"mappings":"ihEAmBeA,MAhBf,SAAoBC,GAGlB,OACE,sBAAKC,UAAY,YAAjB,UACGD,EAAME,QAAQC,KAAI,SAAAC,GAAM,OACvB,qBAAKH,UAAU,OAAOI,GAAMD,EAAOC,GAAsBC,QAAWN,EAAMO,QAA1E,SACA,qBAAKN,UAAU,gBAAf,SACA,qBAAKO,IAAKJ,EAAOK,MAAOJ,GAAMD,EAAOC,QAFSD,EAAOC,OAFzD,Q,MCAWK,MAJf,SAAiBV,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMW,Y,MCG1BC,MAJf,SAAeZ,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAMW,Y,MCQvBE,MATf,SAAoBb,GAClB,OACA,gCACA,qBAAIC,UAAU,aAAd,oBAAmCD,EAAMc,UACzC,qBAAIb,UAAU,aAAd,wBAAuCD,EAAMe,iB,OCwFhCC,E,4MArFbC,MAAQ,CACNf,QAASA,EACTY,OAAQ,EACRC,UAAW,EACXG,eAAiB,I,EAGnBC,UAAY,SAACd,GAEXe,QAAQC,IAAI,UACZ,EAAKC,SAAS,CAAER,OAAQ,EAAKG,MAAMH,OAAS,KAC5CM,QAAQC,IAAIhB,GACZ,EAAKY,MAAMC,eAAeK,KAAKlB,GAC/Be,QAAQC,IAAI,EAAKJ,MAAMC,iB,EAGzBM,WAAa,WAEP,EAAKP,MAAMF,WAAa,EAAKE,MAAMH,QACnC,EAAKQ,SAAS,CAAEP,UAAW,EAAKE,MAAMH,SAE1C,EAAKQ,SAAS,CAAER,OAAQ,IACxB,EAAKQ,SAAS,CAACJ,eAAgB,M,EAEnCO,QAAQ,WACNL,QAAQC,IAAI,aAGZ,IAFA,IAAIK,EAAS,GACTC,EAAY,GACPC,EAAI,EAAGA,EAAI,EAAKX,MAAMf,QAAQ2B,OAAQD,IAAI,CACjD,IAAIE,EAAOC,KAAKC,MAAMD,KAAKE,SAAS,EAAKhB,MAAMf,QAAQ2B,QAGvD,IAFAT,QAAQC,IAAIS,GACZV,QAAQC,IAAIM,EAAUO,QAAQJ,KACI,IAA3BH,EAAUO,QAAQJ,IACvBA,EAAOC,KAAKC,MAAMD,KAAKE,SAAS,EAAKhB,MAAMf,QAAQ2B,QACnDT,QAAQC,IAAIS,GACZV,QAAQC,IAAI,SAEdD,QAAQC,IAAI,EAAKJ,MAAMf,QAAQ4B,IAC/BJ,EAAOH,KAAK,EAAKN,MAAMf,QAAQ4B,IAC/BH,EAAUJ,KAAKO,GAEjB,EAAKR,SAAS,CAAEpB,QAAUwB,K,EAG5BnB,QAAU,SAACF,GACT,IAAI8B,GAAY,EAChBf,QAAQC,IAAI,EAAKJ,MAAMC,gBACvB,IAAI,IAAIU,EAAI,EAAGA,EAAI,EAAKX,MAAMC,eAAeW,OAASD,IACjD,EAAKX,MAAMC,eAAeU,KAAKvB,EAAG+B,OAAO/B,KAC1C8B,GAAY,EACZ,EAAKX,WAAWnB,EAAG+B,OAAO/B,KAG9Be,QAAQC,IAAIhB,EAAG+B,OAAO/B,KACL,IAAd8B,GACH,EAAKhB,UAAUd,EAAG+B,OAAO/B,IAEzB,EAAKoB,W,uDAkBH,OADAL,QAAQC,IAAIgB,KAAKpB,MAAMF,WAErB,eAAC,EAAD,WACA,cAAC,EAAD,0BACA,cAAC,EAAD,CAAYD,OAAUuB,KAAKpB,MAAMH,OAAQC,UAAasB,KAAKpB,MAAMF,YACjE,cAAC,EAAD,CAAYb,QAAWmC,KAAKpB,MAAMf,QAASiB,UAAakB,KAAKlB,UAAWK,WAAca,KAAKb,WAAYc,kBAAqBD,KAAKnB,eAAgBX,QAAW8B,KAAK9B,iB,GAjFrJgC,a,MCHlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6bd4af79.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  //console.log(props.friends);\n\n  return (\n    <div className = \"container\">\n      {props.friends.map(friend=> (\n        <div className=\"card\" id = {friend.id} key = {friend.id} onClick = {props.clicked}>\n        <div className=\"img-container\">\n        <img src={friend.image} id = {friend.id} />\n        </div>\n        </div>\n      ))};\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Scoreboard(props) {\n  return (\n  <div>\n  <h1 className=\"scoreboard\">Score: {props.points}</h1>\n  <h1 className=\"scoreboard\">Highscore: {props.highscore}</h1>\n  </div>\n  );\n}\n\nexport default Scoreboard;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport friends from \"./friends.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends: friends,\n    points: 0,\n    highscore: 0,\n    clickedCharIds : []\n  };\n\n  addPoints = (id) => {\n    // We always use the setState method to update a component's state\n    console.log(\"adding\");\n    this.setState({ points: this.state.points + 10 });\n    console.log(id);\n    this.state.clickedCharIds.push(id);\n    console.log(this.state.clickedCharIds);\n};\n\n  losePoints = () => {\n    // We always use the setState method to update a component's state\n    if (this.state.highscore <= this.state.points) {\n        this.setState({ highscore: this.state.points });\n    }\n    this.setState({ points: 0 });\n    this.setState({clickedCharIds: []})\n}\nshuffle=()=> {\n  console.log(\"shuffling\");\n  var newArr = [];\n  var usedIndex = [];\n  for (let i = 0; i < this.state.friends.length; i++){\n    let rand = Math.floor(Math.random()*this.state.friends.length);\n    console.log(rand); \n    console.log(usedIndex.indexOf(rand));\n    while (usedIndex.indexOf(rand)!==-1){\n      rand = Math.floor(Math.random()*this.state.friends.length);\n      console.log(rand);\n      console.log(\"while\");\n    }\n    console.log(this.state.friends[rand]);\n    newArr.push(this.state.friends[rand]);\n    usedIndex.push(rand);\n  }\n  this.setState({ friends : newArr });\n}\n\nclicked = (id) => {\n  var operation = false;\n  console.log(this.state.clickedCharIds);\n  for(var i = 0; i < this.state.clickedCharIds.length ; i++){\n    if(this.state.clickedCharIds[i]===id.target.id){\n      operation = true;\n      this.losePoints(id.target.id);\n    }\n  }\n  console.log(id.target.id);\n  if(operation === false){\n  this.addPoints(id.target.id);\n  }\n  this.shuffle();\n  // var newArr = [];\n  // var usedIndex = [];\n  // for (let i = 0; i < this.state.friends.length * 2; i++){\n  //   let rand = Math.floor(Math.random()*this.state.friends.length);\n  //   while (usedIndex.indexOf(rand)){\n  //     rand = Math.floor(Math.random()*this.state.friends.length);\n  //   }\n  //   newArr.push(this.state.friends[rand]);\n  //   usedIndex.push(rand);\n  // }\n}\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    console.log(this.state.highscore);\n    return (\n      <Wrapper>\n      <Title>Memory Game</Title>\n      <Scoreboard points = {this.state.points} highscore = {this.state.highscore}/>\n      <FriendCard friends = {this.state.friends} addPoints = {this.addPoints} losePoints = {this.losePoints} clickedCharPoints = {this.clickedCharIds} clicked = {this.clicked} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}